
classdef gait_feedback_msgsResponse < ros.Message
    %gait_feedback_msgsResponse MATLAB implementation of lander/gait_feedback_msgsResponse
    %   This class was automatically generated by
    %   ros.internal.pubsubEmitter.
    %   Copyright 2014-2020 The MathWorks, Inc.
    properties (Constant)
        MessageType = 'lander/gait_feedback_msgsResponse' % The ROS message type
    end
    properties (Constant, Hidden)
        MD5Checksum = '532b0c4ac83e2427806e5be0d649382c' % The MD5 Checksum of the message definition
        PropertyList = { 'IsFinish' 'Foot1Position' 'Foot2Position' 'Foot3Position' 'Foot4Position' } % List of non-constant message properties
        ROSPropertyList = { 'isFinish' 'foot1_position' 'foot2_position' 'foot3_position' 'foot4_position' } % List of non-constant ROS message properties
        PropertyMessageTypes = { '' ...
            '' ...
            '' ...
            '' ...
            '' ...
            } % Types of contained nested messages
    end
    properties (Constant)
    end
    properties
        IsFinish
        Foot1Position
        Foot2Position
        Foot3Position
        Foot4Position
    end
    methods
        function set.IsFinish(obj, val)
            validClasses = {'logical', 'numeric'};
            validAttributes = {'nonempty', 'scalar'};
            validateattributes(val, validClasses, validAttributes, 'gait_feedback_msgsResponse', 'IsFinish');
            obj.IsFinish = logical(val);
        end
        function set.Foot1Position(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'gait_feedback_msgsResponse', 'Foot1Position');
            obj.Foot1Position = double(val);
        end
        function set.Foot2Position(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'gait_feedback_msgsResponse', 'Foot2Position');
            obj.Foot2Position = double(val);
        end
        function set.Foot3Position(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'gait_feedback_msgsResponse', 'Foot3Position');
            obj.Foot3Position = double(val);
        end
        function set.Foot4Position(obj, val)
            validClasses = {'numeric'};
            val = val(:);
            validAttributes = {'vector', 'numel', 3};
            validateattributes(val, validClasses, validAttributes, 'gait_feedback_msgsResponse', 'Foot4Position');
            obj.Foot4Position = double(val);
        end
    end
    methods (Static, Access = {?matlab.unittest.TestCase, ?ros.Message})
        function obj = loadobj(strObj)
        %loadobj Implements loading of message from MAT file
        % Return an empty object array if the structure element is not defined
            if isempty(strObj)
                obj = ros.msggen.lander.gait_feedback_msgsResponse.empty(0,1);
                return
            end
            % Create an empty message object
            obj = ros.msggen.lander.gait_feedback_msgsResponse(strObj);
        end
    end
end
